{
 "Resources": {
  "HealthLakeDatastore": {
   "Type": "AWS::HealthLake::FHIRDatastore",
   "Properties": {
    "DatastoreTypeVersion": "R4"
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/HealthLakeDatastore"
   }
  },
  "PatientLookupFunctionServiceRole95F5D3BA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/PatientLookupFunction/ServiceRole/Resource"
   }
  },
  "PatientLookupFunction986F5F1C": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-456486178204-us-east-1",
     "S3Key": "ca6acfca75296be168a6ae295d9f46d3ae3c0311b466c2757f329fe610191874.zip"
    },
    "Environment": {
     "Variables": {
      "FHIR_ENDPOINT": {
       "Fn::GetAtt": [
        "HealthLakeDatastore",
        "DatastoreEndpoint"
       ]
      }
     }
    },
    "Handler": "app.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "PatientLookupFunctionServiceRole95F5D3BA",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "PatientLookupFunctionServiceRole95F5D3BA"
   ],
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/PatientLookupFunction/Resource",
    "aws:asset:path": "asset.ca6acfca75296be168a6ae295d9f46d3ae3c0311b466c2757f329fe610191874",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "PDFGeneratorFunctionServiceRole6CB38D04": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
       ]
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/PDFGeneratorFunction/ServiceRole/Resource"
   }
  },
  "PDFGeneratorFunction1C8A89C8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-456486178204-us-east-1",
     "S3Key": "e6707ed1b180a5a3d888a25c6c76fd914babaee10b6104af840defdaab28c631.zip"
    },
    "Handler": "app.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "PDFGeneratorFunctionServiceRole6CB38D04",
      "Arn"
     ]
    },
    "Runtime": "python3.11",
    "Timeout": 10
   },
   "DependsOn": [
    "PDFGeneratorFunctionServiceRole6CB38D04"
   ],
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/PDFGeneratorFunction/Resource",
    "aws:asset:path": "asset.e6707ed1b180a5a3d888a25c6c76fd914babaee10b6104af840defdaab28c631",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code"
   }
  },
  "FallDetectionAPICCCA4C66": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "Fall Detection Service"
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Resource"
   }
  },
  "FallDetectionAPIDeployment06619FB282cc9433685a9a2b4e736e4170f1df27": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "FallDetectionAPICCCA4C66"
    }
   },
   "DependsOn": [
    "FallDetectionAPIgeneratepdfPOST48F9B589",
    "FallDetectionAPIgeneratepdfEF7B4AD1",
    "FallDetectionAPIpatientGET3C10B5C9",
    "FallDetectionAPIpatient8BEDE056"
   ],
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Deployment/Resource"
   }
  },
  "FallDetectionAPIDeploymentStageprod60D98067": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "FallDetectionAPIDeployment06619FB282cc9433685a9a2b4e736e4170f1df27"
    },
    "RestApiId": {
     "Ref": "FallDetectionAPICCCA4C66"
    },
    "StageName": "prod"
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/DeploymentStage.prod/Resource"
   }
  },
  "FallDetectionAPIpatient8BEDE056": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "FallDetectionAPICCCA4C66",
      "RootResourceId"
     ]
    },
    "PathPart": "patient",
    "RestApiId": {
     "Ref": "FallDetectionAPICCCA4C66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Default/patient/Resource"
   }
  },
  "FallDetectionAPIpatientGETApiPermissionFallDetectionAppStackFallDetectionAPI2DB521FBGETpatient91E3F1CF": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PatientLookupFunction986F5F1C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:456486178204:",
       {
        "Ref": "FallDetectionAPICCCA4C66"
       },
       "/",
       {
        "Ref": "FallDetectionAPIDeploymentStageprod60D98067"
       },
       "/GET/patient"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Default/patient/GET/ApiPermission.FallDetectionAppStackFallDetectionAPI2DB521FB.GET..patient"
   }
  },
  "FallDetectionAPIpatientGETApiPermissionTestFallDetectionAppStackFallDetectionAPI2DB521FBGETpatient1010C924": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PatientLookupFunction986F5F1C",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:456486178204:",
       {
        "Ref": "FallDetectionAPICCCA4C66"
       },
       "/test-invoke-stage/GET/patient"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Default/patient/GET/ApiPermission.Test.FallDetectionAppStackFallDetectionAPI2DB521FB.GET..patient"
   }
  },
  "FallDetectionAPIpatientGET3C10B5C9": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "GET",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PatientLookupFunction986F5F1C",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "FallDetectionAPIpatient8BEDE056"
    },
    "RestApiId": {
     "Ref": "FallDetectionAPICCCA4C66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Default/patient/GET/Resource"
   }
  },
  "FallDetectionAPIgeneratepdfEF7B4AD1": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "FallDetectionAPICCCA4C66",
      "RootResourceId"
     ]
    },
    "PathPart": "generate-pdf",
    "RestApiId": {
     "Ref": "FallDetectionAPICCCA4C66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Default/generate-pdf/Resource"
   }
  },
  "FallDetectionAPIgeneratepdfPOSTApiPermissionFallDetectionAppStackFallDetectionAPI2DB521FBPOSTgeneratepdf57808FA2": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PDFGeneratorFunction1C8A89C8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:456486178204:",
       {
        "Ref": "FallDetectionAPICCCA4C66"
       },
       "/",
       {
        "Ref": "FallDetectionAPIDeploymentStageprod60D98067"
       },
       "/POST/generate-pdf"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Default/generate-pdf/POST/ApiPermission.FallDetectionAppStackFallDetectionAPI2DB521FB.POST..generate-pdf"
   }
  },
  "FallDetectionAPIgeneratepdfPOSTApiPermissionTestFallDetectionAppStackFallDetectionAPI2DB521FBPOSTgeneratepdfC1D27570": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "PDFGeneratorFunction1C8A89C8",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:aws:execute-api:us-east-1:456486178204:",
       {
        "Ref": "FallDetectionAPICCCA4C66"
       },
       "/test-invoke-stage/POST/generate-pdf"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Default/generate-pdf/POST/ApiPermission.Test.FallDetectionAppStackFallDetectionAPI2DB521FB.POST..generate-pdf"
   }
  },
  "FallDetectionAPIgeneratepdfPOST48F9B589": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "PDFGeneratorFunction1C8A89C8",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "FallDetectionAPIgeneratepdfEF7B4AD1"
    },
    "RestApiId": {
     "Ref": "FallDetectionAPICCCA4C66"
    }
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/FallDetectionAPI/Default/generate-pdf/POST/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/71TTY/bIBD9LctxRWjTqFWVm9MPqdJuG2V7s6LVLEydaWxAgBtZyP+9AttxctnDbtUT88Xw3pvhnVh+/CDe3sDJL6Q6Lmp6EvEhgDzyT7/0Dr1pnUQOJ/8Ya2ieFIj4tdUykNFlZKj/kDO6QR3Ymt0yzgI1aNrJk0bhaB5Aqxrd6LlWp8rs9TwyUOrLZa8yV92yfUq+pOc+4Z+QJnuLriHvyeieEzQi7kyNZWTgfdug2nRsHZl1pCVZqAspTXsmNdSkC0XuN8JmDWioUG1NTZLQs3UZr2Jd4cbazON/PZW5pxY996tH8B6DF0U6uF+JTSuPGDbgsdxzsFRBwBN0Iu7Qh8JSGZkbrO9wpeaY55/R1qZLcyojU+ilI3uGyhlYmgaCAUjP5f5y3D/NnalIQv1NJTKjQv8insHOr/KHABVmqFPoglRO8mnRsypp7c6RMjILbt5vC+GwBRfOVJ7J7q/+0D2Gg1GDujkyLXEIdsiNAdIBKwcXkpqs7yzfKztkXMOFvp+ZTl+O51VJwpCuUumPNtg29HzbhYPRb1ZiuRTvb357osX458RuOP8CpkAf+E8EAAA="
   },
   "Metadata": {
    "aws:cdk:path": "FallDetectionAppStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "FallDetectionAPIEndpoint2811E9FD": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "FallDetectionAPICCCA4C66"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "FallDetectionAPIDeploymentStageprod60D98067"
      },
      "/"
     ]
    ]
   }
  },
  "ApiUrl": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "FallDetectionAPICCCA4C66"
      },
      ".execute-api.us-east-1.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "FallDetectionAPIDeploymentStageprod60D98067"
      },
      "/"
     ]
    ]
   }
  },
  "FHIRDatastoreEndpoint": {
   "Value": {
    "Fn::GetAtt": [
     "HealthLakeDatastore",
     "DatastoreEndpoint"
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}